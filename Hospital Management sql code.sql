-- Create Database
CREATE DATABASE IF NOT EXISTS Hospital_management_system;
USE Hospital_Management_System;

-- Drop Tables if they exist (for recreation)
DROP TABLE IF EXISTS bills;
DROP TABLE IF EXISTS treatments;
DROP TABLE IF EXISTS appointments;
DROP TABLE IF EXISTS doctors;
DROP TABLE IF EXISTS patients;

-- Create Patients Table
CREATE TABLE patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(100) NOT NULL,
    gender VARCHAR(50) NOT NULL,
    phone VARCHAR(15) NOT NULL,
    email_address VARCHAR(100),
    address VARCHAR(100)
);

-- Create Doctors Table
CREATE TABLE doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(100) NOT NULL,
    department VARCHAR(100) NOT NULL,
    department_id VARCHAR(100) NOT NULL,
    phone VARCHAR(15) NOT NULL
);

-- Create Appointments Table
CREATE TABLE appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT NOT NULL,
    doctor_id INT NOT NULL,
    appointment_date DATE NOT NULL, -- No CHECK constraint
    appointment_time TIME,
    status VARCHAR(100) NOT NULL DEFAULT 'Pending',
    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES doctors(doctor_id)
);

-- Create Treatments Table
CREATE TABLE treatments (
    treatment_id INT PRIMARY KEY,
    patient_id INT NOT NULL,
    doctor_id INT NOT NULL,
    treatment_type VARCHAR(100) NOT NULL,
    treatment_date DATE NOT NULL,
    FOREIGN KEY (patient_id) REFERENCES patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES doctors(doctor_id)
);

-- Create Bills Table
CREATE TABLE bills (
    bill_id INT PRIMARY KEY,
    patient_id INT NOT NULL,
    amount DECIMAL(10,2) NOT NULL CHECK (amount > 0),
    bill_date DATE NOT NULL,
    status VARCHAR(100) NOT NULL DEFAULT 'Unpaid',
    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)
);

-- Insert Patients
INSERT INTO patients (patient_id, patient_name, gender, phone, email_address, address) VALUES
(1, 'Amit Sharma', 'Male', '9876543210', 'amit.sharma@example.com', 'Delhi'),
(2, 'Priya Iyer', 'Female', '9876543211', 'priya.iyer@example.com', 'Mumbai'),
(3, 'Rahul Verma', 'Male', '9876543212', 'rahul.verma@example.com', 'Bangalore'),
(4, 'Neha Gupta', 'Female', '9876543213', 'neha.gupta@example.com', 'Kolkata'),
(5, 'Arjun Reddy', 'Male', '9876543214', 'arjun.reddy@example.com', 'Hyderabad');

-- Insert Doctors
INSERT INTO doctors (doctor_id, doctor_name, department, department_id, phone) VALUES
(1, 'Dr. Ramesh Kumar', 'Cardiology', 'Cardio1', '9876543220'),
(2, 'Dr. Sneha Menon', 'Dermatology', 'Dermato4', '9876543221'),
(3, 'Dr. Vishal Patil', 'Dermatology', 'Dermato4', '9876543222'),
(4, 'Dr. Ananya Singh', 'Pediatrics', 'Pediatric2', '9876543223'),
(5, 'Dr. Rajesh Khanna', 'Cardiology', 'Cardio1', '9876543224');

-- Insert Appointments
INSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES
(1, 1, 1, '2025-03-15', '10:00:00', 'Pending'),
(2, 2, 2, '2025-03-20', '11:30:00', 'Completed'),
(3, 3, 1, '2025-03-22', '13:30:00', 'Pending'),
(4, 4, 4, '2025-03-25', '15:00:00', 'Cancelled'),
(5, 5, 5, '2025-03-27', '16:00:00', 'Completed');

-- Insert Treatments
INSERT INTO treatments (treatment_id, patient_id, doctor_id, treatment_type, treatment_date) VALUES
(1, 1, 1, 'Heart Surgery', '2025-01-10'),
(2, 2, 2, 'Knee Replacement', '2025-01-15'),
(3, 3, 1, 'Skin Allergy Treatment', '2025-01-20'),
(4, 4, 4, 'Child Vaccination', '2025-02-01'),
(5, 5, 5, 'Brain MRI', '2025-02-10');

-- Insert Bills with relevant last-month data
INSERT INTO bills (bill_id, patient_id, amount, bill_date, status) VALUES
(1, 1, 50000.00, '2025-02-10', 'Unpaid'),  
(2, 2, 30000.00, '2025-02-20', 'Paid'),   
(3, 3, 20000.00, '2025-02-28', 'Unpaid'), 
(4, 4, 10000.00, '2025-01-15', 'Paid'),    
(5, 5, 70000.00, '2025-03-01', 'Unpaid');  

-- **Task 3 Queries**

-- 1. List all upcoming appointments for a specific doctor 
SELECT a.appointment_id, p.patient_name, a.appointment_date, a.appointment_time, a.status
FROM appointments a
JOIN patients p ON p.patient_id = a.patient_id
WHERE a.doctor_id = 1 
AND a.appointment_date >= CURDATE()
ORDER BY a.appointment_date, a.appointment_time;

-- 2. Calculate the total revenue generated by a specific department  in the last month
SELECT d.department, d.department_id, SUM(b.amount) AS total_amount
FROM bills b
JOIN appointments a ON a.patient_id = b.patient_id
JOIN doctors d ON a.doctor_id = d.doctor_id
WHERE d.department = 'Dermatology' 
AND b.bill_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE()
GROUP BY d.department, d.department_id;

-- 3. Retrieve a list of all treatments provided to a specific patient
SELECT t.patient_id, p.patient_name, t.treatment_type, t.treatment_date, d.doctor_name
FROM treatments t
JOIN patients p ON t.patient_id = p.patient_id
JOIN doctors d ON t.doctor_id = d.doctor_id
WHERE t.patient_id = 1;
